{"version":3,"sources":["history.js","actions/listActions.js","components/AllLists.js","components/Menu.js","components/Header.js","containers/ListsContainer.js","actions/quoteActions.js","components/QuoteOfTheDay.js","containers/Home.js","components/ListForm.js","components/ListCreate.js","components/QuoteDetail.js","components/AllQuotes.js","containers/QuotesContainer.js","components/QuoteUpvote.js","components/FavoriteQuotes.js","containers/FavoritesContainer.js","App.js","serviceWorker.js","reducers/listReducer.js","reducers/quoteReducer.js","reducers/index.js","index.js"],"names":["createBrowserHistory","fetchLists","dispatch","type","fetch","then","response","json","lists","payload","setList","id","console","log","data","method","headers","Content-Type","concat","list","deleteList","addQuoteToListFavorites","selectedQuote","body","JSON","stringify","quote","quotes","removeQuoteFromListFavorites","AllLists","onClick","currentList","_this","props","alert","history","push","this","event","target","value","_this2","mapListsForDropdown","allLists","map","index","react_default","a","createElement","key","title","Grid","centered","Row","Column","width","className","onChange","e","handleChange","Divider","chosenlist","Card","Group","fluid","Content","Header","as","textAlign","Meta","content","description","extra","Button","vertical","widths","Link","to","basic","color","Fragment","ListInfo","Component","connect","state","bindActionCreators","Nav","Menu","stackable","react_router_dom","Item","position","HomeHeader","icon","Icon","circular","name","ListContainer","Container","components_Header","components_AllLists","API_BASE_URL","requestConfig","Authorization","fetchQuotes","axios","get","getQuotesAsync","selectQuote","QuoteOfTheDay","fetchQuoteOfTheDay","quoteOfDay","Subheader","author","renderQuoteOfDay","_ref","Object","asyncToGenerator","regenerator_default","mark","_callee","wrap","_context","prev","next","sent","stop","_x","apply","arguments","Home","Message","floating","components_QuoteOfTheDay","ListForm","renderInput","formProps","input","label","meta","error","touched","assign","autoComplete","renderError","onSubmit","formValues","Form","handleSubmit","Field","component","React","reduxForm","form","validate","errors","ListCreate","createList","components_ListForm","QuoteDetail","Segment","Description","Extra","tags","tag","Label","size","Popup","trigger","on","AllQuotes","allQuotes","List","floated","components_QuoteDetail","pointing","QuotesContainer","style","marginTop","components_AllQuotes","QuoteUpvote","count","handleClick","setState","prevState","FavoriteQuotes","favorites","Or","components_QuoteUpvote","FavoritesContainer","components_FavoriteQuotes","App","react_router","components_Menu","exact","path","ListsContainer","Boolean","window","location","hostname","match","initialState","loading","rootReducer","combineReducers","length","undefined","action","objectSpread","filter","find","formReducer","composeEnhancer","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","reduxThunk","ReactDOM","render","es","src_App","document","querySelector","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.ca2fd66e.chunk.js","sourcesContent":["import { createBrowserHistory } from \"history\";\n\nexport default createBrowserHistory(); ","import fetch from 'isomorphic-fetch'\n// import axios from 'axios';\nimport history from '../history';\nimport  AllLists  from '../components/AllLists'\n\n\n\nexport const createList = (formValues) => {\n  console.log('C');\n  let data = {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({ list: formValues })\n  }\n// Redux-thunk allows us to to write action creators that return an function instead of an action.\n// The function below delays dispatch so the asynchronous action (fetching lists) can complete.\n  return dispatch => {\n    fetch (`/api/lists`, data)\n      .then(response => response.json())\n      .then(list => {\n        console.log('D');\n        dispatch({\n              type: 'CREATE_LIST',\n              payload: list\n            })})\n     \n  }\n  console.log('E');\n\n}\n  export const fetchLists = () => {\n    return (dispatch) => {\n      dispatch({ type: 'LOADING_LISTS' })\n      return fetch('/api/lists')\n      .then(response => {\n        return response.json()\n      }).then(lists => {\n        return dispatch({ type: 'FETCH_LISTS', payload: lists })\n      })\n    }\n  }\n\n  export const setList = id => {\n  console.log(id)\n  let data = {\n    method: 'GET',\n    headers: {\n      'Content-Type': 'application/json'\n    }\n  }\n\n  return dispatch => {\n    fetch (`/api/lists/${id}`, data)\n    .then(response => {\n      return response.json()\n    }).then (list => {\n      return dispatch({\n        type: 'SET_LIST',\n        payload: list\n      })\n    })\n  }\n}\n\nexport const deleteList = list => {\n\n\n  return dispatch => {\n    fetch ('/api/lists/' + list.id, {\n            method: \"DELETE\",\n            headers: {\n            'Content-Type': 'application/json'\n        }\n      })\n      .then(response => dispatch({ type: 'DELETE_LIST', payload: list }));\n    }\n    history.push('/');\n};\n\nexport const addQuoteToListFavorites = (selectedQuote, list) => {\n  let id = list.id\n  let data = {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({ quote: selectedQuote })\n  }\n\n  return dispatch => {\n    fetch (`/api/lists/${id}/add_to_favorites`, data)\n      .then(response => response.json())\n      .then(quotes => dispatch({\n        type: 'ADD_TO_FAVORITES',\n        payload: quotes\n      }))\n  }\n}\n\nexport const removeQuoteFromListFavorites = (selectedQuote, list) => {\n  let id = list.id\n  let data = {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({ quote: selectedQuote })\n  }\n\n  return dispatch => {\n    fetch (`/api/lists/${id}/remove_from_favorites`, data)\n      .then(response => response.json())\n      .then(quotes => dispatch({\n        type: 'REMOVE_FROM_FAVORITES',\n        payload: quotes\n      }))\n  }\n}\n\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux'\nimport history from '../history';\nimport { Link } from 'react-router-dom';\nimport { Grid, Button, Divider, Card } from 'semantic-ui-react'\nimport { deleteList } from '../actions/listActions';\nimport { fetchLists }  from '../actions/listActions'\nimport { setList }  from '../actions/listActions'\n\n\nclass AllLists extends Component {\n\n  componentDidMount() {\n    this.props.fetchLists()\n  }\n\n  handleChange(event) {\n  // console.log(event.target.value)\n    this.props.setList(event.target.value)\n  }\n\n  onClick = (currentList) => {\n    this.props.deleteList(this.props.currentList)\n    alert('List deleted!')\n    history.push('/')\n  };\n\n    render() {\n\n    const mapListsForDropdown = this.props.allLists.map((list, index) => {\n      return (\n      <option value={list.id} key={list.id} id={list.id}>\n      {list.title}\n      </option>\n      )\n    })\n\n    const ListInfo = () => {\n      if (this.props.currentList) {\n      const chosenlist = this.props.currentList\n        return (\n          <div>\n            <Card.Group centered>\n            <Card fluid>\n\n              <Card.Content >\n                <Card.Header as='h2' textAlign='center'>{chosenlist.title}\n                <Card.Meta content={chosenlist.description} />\n                </Card.Header>\n              <Card.Content extra >\n               <Button.Group vertical widths='5'>\n                <Button as={Link} to=\"/all\" basic color='violet'>Add Quotes </Button>\n                <Button as={Link} to=\"/favorites\" basic color='green'>Favorites</Button>\n                <React.Fragment>\n                <Button  basic color=\"red\"\n                onClick={() => this.onClick()} >Delete List</Button>\n                </React.Fragment>\n                </Button.Group>\n              </Card.Content>\n              </Card.Content>\n            </Card>\n            </Card.Group>\n          </div>\n        )\n    }\n  }\n\n  return (\n    <div>\n      <Grid centered >\n        <Grid.Row>\n        <Grid.Column width={8}>\n          <div className=\"ui centered card\">\n            <select onChange={(e) => this.handleChange(e)}>\n            <option value=\"\">Select a List</option>\n            {mapListsForDropdown}\n            </select>\n          </div>\n          </Grid.Column>\n          </Grid.Row>\n          <Divider />\n          <Grid.Row>\n          <Grid.Column width={8}>\n            <div>{ListInfo()}</div>\n        </Grid.Column>\n        </Grid.Row>\n      </Grid>\n    </div>\n  )\n  }\n\n}\n\n\nconst mapStateToProps = (state) => {\n    return {\n      allLists: state.list.allLists,\n      currentList: state.list.currentList\n    }\n}\n\nconst mapDispatchToProps = (dispatch) => bindActionCreators({\ndeleteList,\nfetchLists,\nsetList\n}, dispatch)\n\nexport default connect(mapStateToProps, mapDispatchToProps) ( AllLists);\n","import React from 'react'\nimport { Link } from 'react-router-dom';\nimport { Menu, Header } from 'semantic-ui-react'\n\nconst Nav = () =>\n  <Menu stackable>\n      <Link to=\"/\" ><Menu.Item>Home</Menu.Item></Link>\n      <Link to=\"/lists\" ><Menu.Item>Pick A List</Menu.Item></Link>\n      <Link to=\"/new\" ><Menu.Item>Create A List</Menu.Item></Link>\n      <Link to=\"/all\" ><Menu.Item>All Quotes</Menu.Item></Link>\n      <Link to=\"/favorites\" ><Menu.Item>Favorites</Menu.Item></Link>\n    <Menu.Menu position='right'>\n      <Menu.Item><Link to=\"/\" > <Header as='h4'>Quotalicious</Header></Link></Menu.Item>\n    </Menu.Menu>\n  </Menu>\n\nexport default Nav","import React from 'react';\nimport { Header, Icon } from 'semantic-ui-react'\n\nconst HomeHeader = () => {\n\treturn(\n\t\t<div>\n\t\t\t<Header as='h2' icon textAlign='center'>\n\t\t\t<Icon circular color=\"violet\" name=\"quote left\" />\n\n\t\t\t</Header>\n\n\t\t</div>\n\t)\n}\n\nexport default HomeHeader","import React from 'react'\nimport { Container, Message, Divider } from 'semantic-ui-react'\nimport  AllLists  from '../components/AllLists'\nimport Header from '../components/Header'\n\nconst ListContainer = () => {\n\n\treturn (\n\t\t<Container>\n\t\t\t<div>\n\t\t\t\t<Header/>\n\t\t\t</div>\n\n\t\t\t<div>\n\t\t\t\t<AllLists/>\n\t\t\t</div>\n\t\t</Container>\n\t)\n\n}\n\nexport default ListContainer","// import fetch from 'isomorphic-fetch'\nimport axios from 'axios';\n\n// INITIALIZATION\n\nconst API_BASE_URL = 'https://favqs.com/api';\nconst API_KEY = '2753f23b0d360665f53e7ae14a7382d5';\n\nconst requestConfig = {\n    headers: {\n        Authorization: `Token token=\"${API_KEY}\"`\n    }\n};\n\nexport const fetchQuoteOfTheDay = () => async dispatch => {\n  const response = await axios.get(`${API_BASE_URL}/qotd`, requestConfig)\n\n  dispatch({\n    type:'FETCH_QUOTE_OF_THE_DAY',\n    payload: response.data.quote\n  })\n}\n\nexport default function fetchQuotes() {\n  return (dispatch) => {\n    axios.get(`${API_BASE_URL}/quotes`, requestConfig)\n    .then(response => {\n      const quotes = response.data.quotes.map(quote => {\n          return quote;\n        });\n        dispatch(getQuotesAsync(quotes));\n      });\n  }\n}\n\nfunction getQuotesAsync(quotes){  \n  return {\n    type: 'FETCH_QUOTES',\n    payload: quotes\n  };\n}\n\nexport const selectQuote = (quote) => {\n  return dispatch => {\n    dispatch({\n      type: 'QUOTE_SELECTED',\n      payload: quote\n    })\n  }\n}","import React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport { Container, Header, Icon } from 'semantic-ui-react'\nimport { bindActionCreators } from 'redux'\nimport  { fetchQuoteOfTheDay } from '../actions/quoteActions'\n\n\nclass QuoteOfTheDay extends Component {\n\n  componentDidMount() {\n    this.props.fetchQuoteOfTheDay();\n\n  }\n\n  render() {\n    const renderQuoteOfDay = () => {\n      if (this.props.quoteOfDay) {\n        return (\n          <Container textAlign='center'>\n            <Header as='h2'>\n              \"{this.props.quoteOfDay.body}\"\n              <Header.Subheader>{this.props.quoteOfDay.author}</Header.Subheader>\n            </Header>\n          </Container>\n        )}\n    }\n        return (\n          <div>{renderQuoteOfDay()}</div>\n        )\n      }\n  }\n\n  const mapStateToProps = (state) => {\n    return {\n      quoteOfDay: state.quotes.quoteOfDay\n    }\n}\n\nexport default connect(mapStateToProps, { fetchQuoteOfTheDay })(QuoteOfTheDay);","import React from 'react'\nimport { Container, Message, Divider, Button } from 'semantic-ui-react'\nimport  ListsContainer  from '../containers/ListsContainer'\nimport  QuoteOfTheDay  from '../components/QuoteOfTheDay'\nimport Header from '../components/Header'\nimport { Link } from 'react-router-dom';\n\nconst Home = () => {\n\n  return (\n    <Container>\n      <div>\n        <Header/>\n      </div>\n      <Message floating>\n        <QuoteOfTheDay />\n      </Message>\n      <div>\n        <Button fluid as={Link} to=\"/lists\" color='violet' > View All Lists!</Button>\n      </div>\n    </Container>\n  )\n\n}\n\nexport default Home","import React from 'react';\nimport { Field, reduxForm } from 'redux-form';\nimport { Container, Form, Button, Popup } from 'semantic-ui-react'\nimport { Link } from 'react-router-dom';\nimport history from '../history';\n\nclass ListForm extends React.Component {\n\n    renderError({error, touched}){\n        if(touched && error){\n            return (\n                <div className=\"ui error message\">\n                <div className=\"header\">{error}</div>\n                </div>\n            );\n        }\n    }\n\n    renderInput = (formProps) =>{\n        const { input, label, meta } = formProps;\n        const className = `field ${meta.error && meta.touched ? 'error' : ''}`;\n            return (\n                <div className={className}>\n                    <label>{label}</label>\n                    <input {...input} autoComplete=\"off\" />\n                    <div>{this.renderError(meta)}</div>\n                </div>\n            );\n    }\n\n    onSubmit = (formValues) => {\n        console.log('A');\n        this.props.onSubmit(formValues);\n        console.log('B');\n        alert('List created')\n        history.push('/')\n    };\n\n\n    render(){\n        return (\n            <Container>\n                <Form\n                    onSubmit={this.props.handleSubmit(this.onSubmit)}>\n                    <Field name=\"title\" component={this.renderInput} label=\"Enter title: \" />\n                    <Field name=\"description\" component={this.renderInput} label=\"Enter descripiton: \" />\n\n                    <Button color=\"violet\">Submit</Button>\n                </Form>\n            </Container>\n        );\n    }\n};\n\nconst validate = (formValues) => {\n    const errors = {};\n    if(!formValues.title){\n    // only ran if user did not enter title\n    errors.title = 'You must enter a title';\n    }\n    if(!formValues.description){\n    errors.description = 'You must enter a description';\n    }\n    return errors;\n};\n\nexport default reduxForm({\nform: 'ListForm',\nvalidate\n})(ListForm);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Container, Header } from 'semantic-ui-react'\nimport { createList } from '../actions/listActions'\nimport ListForm from './ListForm';\n\nclass ListCreate extends Component {\n\n\tonSubmit = formValues => {\n\t\tthis.props.createList(formValues);\n\t}\n\n\trender () {\n\t\treturn (\n\t\t\t<Container>\n\t\t\t<Header>Create a List</Header>\n\t\t\t<ListForm onSubmit={this.onSubmit} />\n\t\t\t</Container>\n\t\t\t);\n\t}\n}\n\n\nexport default connect(null, { createList })(ListCreate);","import React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport { Item, Container, Label, Button, Popup, Segment } from 'semantic-ui-react'\nimport { bindActionCreators } from 'redux'\nimport { addQuoteToListFavorites } from '../actions/listActions'\n\nclass QuoteDetail extends Component {\n\n  render() {\n\n    const renderQuoteDetail = () => {\n      if (this.props.selectedQuote) {\n        return (\n          <Segment textAlign='center'>\n        \n            <Item key={this.props.selectedQuote.id}>\n              <Item.Content >\n                <Item.Header as='h3'>{this.props.selectedQuote.body} </Item.Header>\n                <Item.Description>{this.props.selectedQuote.author}</Item.Description>\n                  <br />\n                <Item.Extra key={this.props.selectedQuote.id} >\n\n                {this.props.selectedQuote.tags && this.props.selectedQuote.tags.map(tag => {\n                return(\n                <Label tag size='mini' key={tag.id}>{tag}</Label>\n                )\n                })\n            }\n\n            </Item.Extra>\n            <br />\n              <Popup\n              trigger={<Button basic color='violet' onClick={() => this.props.addQuoteToListFavorites(this.props.selectedQuote, this.props.currentList)} content=\"Add to Faves\"/>}\n              content={`Added!`}\n              on='click'\n              position='top right'\n              />\n\n              </Item.Content>\n            </Item>\n       \n          </Segment>\n       )\n      } else {\n        return null\n        }\n    }\n\n    return (\n      <div>{renderQuoteDetail()}</div>\n    )\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n  selectedQuote: state.quotes.selectedQuote,\n  currentList: state.list.currentList\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => bindActionCreators({\n  addQuoteToListFavorites\n}, dispatch)\n\nexport default connect(mapStateToProps, mapDispatchToProps)(QuoteDetail)","import React, { Component } from 'react'\nimport {connect} from 'react-redux'\nimport { bindActionCreators } from 'redux'\nimport { List, Button, Divider, Label, Icon, Header, Segment, Popup } from 'semantic-ui-react'\nimport  fetchQuotes  from '../actions/quoteActions'\nimport { selectQuote }  from '../actions/quoteActions'\nimport QuoteDetail from './QuoteDetail'\n\nclass AllQuotes extends Component {\n\n  componentDidMount() {\n    this.props.fetchQuotes();\n  }\n\n    render() {\n      if (this.props.allQuotes && this.props.currentList) {\n        return (\n          <div>\n            <Header as='h2'>\n            <Icon name='list alternate' />\n              <Header.Content>\n              You are in Your \"{this.props.currentList.title}\" List\n              </Header.Content>\n            </Header>\n            {this.props.allQuotes.map((quote, index) =>\n            <List key={quote.id}>\n              <List.Item >\n                <List.Content floated='right'>\n                <Popup\n              trigger={<Button color=\"violet\" onClick={() => this.props.selectQuote(quote)}content=\"View Quote\"/>}\n              content={<QuoteDetail />}\n              on='click'\n              position='top right'\n              />\n                \n                </List.Content>\n\n                <List.Content key={quote.id}>\n                <Icon name=\"quote left\" />{quote.body}\n                </List.Content>\n                <List.Content>\n                <Label pointing>{quote.author}</Label>\n                </List.Content>\n              </List.Item>\n            <Divider />\n            </List>\n          )}\n          </div>\n        )\n        } else {\n        return (\n\n        <div>You must select a list first!</div>\n        )\n      }\n    }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    allQuotes: state.quotes.allQuotes,\n    currentList: state.list.currentList,\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => bindActionCreators({\nselectQuote,\nfetchQuotes\n}, dispatch)\n\nexport default connect(mapStateToProps, mapDispatchToProps)(AllQuotes)","import React, { Component } from 'react'\nimport AllQuotes from '../components/AllQuotes';\nimport QuoteDetail from '../components/QuoteDetail'\nimport Header from '../components/Header'\nimport { Divider, Container } from 'semantic-ui-react'\n\nclass QuotesContainer extends Component {\n   \n\n    render() {\n        return (\n            <Container style={{ marginTop: '30px' }}>\n                <Header />\n                <Divider />\n                    <AllQuotes /> \n            </Container>\n        );\n    }\n}\n\n\nexport default QuotesContainer","import React, { Component } from 'react'\nimport { Item, Label, Button } from 'semantic-ui-react'\n\nclass QuoteUpvote extends Component {\n\n  state = {\n    count: 0\n  }\n\n  handleClick = () => {\n    this.setState(prevState => ({\n      count: prevState.count + 1\n    }))\n  }\n\n  render() {\n    return (\n      <div>\n        <Button color='red'\n\t      content='Like'\n\t      icon='heart'\n\t      label={{ basic: true, color: 'red', pointing: 'left', content: this.state.count}}\n\t      onClick={this.handleClick}/>\n      </div>\n    )\n  }\n}\n\nexport default QuoteUpvote\n\n","import React, { Component } from 'react'\nimport { removeQuoteFromListFavorites } from '../actions/listActions'\nimport { bindActionCreators } from 'redux'\nimport { Container, Card, Button, Header, Icon } from 'semantic-ui-react'\nimport {connect} from 'react-redux'\nimport QuoteUpvote from '../components/QuoteUpvote'\n\nclass FavoriteQuotes extends Component {\n\n \n  render() {\n    console.log(this.props)\n\n    if (this.props.currentList) {\n\n      return (\n        <Container>\n          <Header as='h2'>\n          <Icon name='list alternate' />\n          <Header.Content>\n          You are in Your \"{this.props.currentList.title}\" List\n          </Header.Content>\n          </Header>\n            <Card.Group>\n            {this.props.currentList.favorites.map((quote, index) =>\n            <Card key={quote.id}>\n              <Card.Content>\n              <Card.Header>{quote.author}</Card.Header>\n\n              <Card.Description> {quote.body} </Card.Description>\n              </Card.Content>\n              <Card.Content extra>\n              <Button.Group>\n              <Button onClick={() => this.props.removeQuoteFromListFavorites(quote, this.props.currentList)}>\n              Remove Quote\n              </Button>\n              <Button.Or />\n              <QuoteUpvote />\n              </Button.Group>\n              </Card.Content>\n            </Card>\n            )}\n            </Card.Group>\n        </Container>\n      )\n    }  else {\n      return(\n       <div>You must select a list first!</div>\n      )\n    }\n  }\n}\n\n// react doc = thinking in react\n// async - promises\n\nconst mapStateToProps = (state) => {\n  return {\n  currentList: state.list.currentList,\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => bindActionCreators({\nremoveQuoteFromListFavorites\n}, dispatch)\n\nexport default connect(mapStateToProps, mapDispatchToProps)(FavoriteQuotes)","import React from 'react'\nimport FavoriteQuotes from '../components/FavoriteQuotes';\nimport Header from '../components/Header'\nimport { Grid, Divider, Container } from 'semantic-ui-react'\n\nconst FavoritesContainer = () => {\n    return (\n        <Container style={{ marginTop: '30px' }}>\n            <Header />\n        <Divider />\n            <Grid >\n            <Grid.Column>\n                <FavoriteQuotes />\n            </Grid.Column>\n            </Grid>\n        </Container>\n    )\n}\n\n\nexport default FavoritesContainer","import React from 'react';\nimport { Router, Route, Switch } from 'react-router-dom';\nimport 'semantic-ui-css/semantic.min.css';\nimport history from './history';\nimport AllLists from './components/AllLists'\nimport Nav from './components/Menu'\nimport Home from './containers/Home'\nimport ListCreate from './components/ListCreate'\n// import ListDelete from './components/ListDelete'\nimport QuotesContainer from './containers/QuotesContainer'\nimport FavoritesContainer from './containers/FavoritesContainer'\nimport ListsContainer from './containers/ListsContainer'\n\n\n  const App = () => {\n    return(\n      <div>\n        <div>\n          <Router history={history}>\n     \n             <Route>\n                <Nav />\n              </Route>\n              <Switch>\n              <Route exact path=\"/\" component={Home}/>\n               <Route path=\"/new\" exact component={ListCreate} />\n                <Route path=\"/lists\" exact component={ListsContainer} />\n              <Route exact path=\"/all\" component={QuotesContainer}/>\n              <Route exact path=\"/favorites\" component={FavoritesContainer}/>\n              </Switch>\n\n          </Router>\n        </div>\n      </div>\n    )\n\n  };\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","\n\nconst initialState = {\n  loading: false,\n  allLists: [],\n  currentList: null,\n}\n\nexport default function listReducer(state = initialState, action) {\n  switch(action.type) {\n    case 'LOADING_LISTS':\n      return { ...state, loading: true}\n    case 'CREATE_LIST':\n      return { ...state, list: action.payload };\n    case 'FETCH_LISTS':\n      return { ...state, loading: false, allLists: action.payload}\n      case 'DELETE_LIST':\n      return {...state, currentList: state.allLists.filter(list => list.id !== action.payload.id), loading: false }\n    case 'RETRIEVING_SELECTED_LIST':\n      return { ...state, loading: true }\n    case 'SET_LIST':\n      return { ...state, currentList: state.allLists.find(list => list.id === action.payload.id) }\n    case 'ADD_TO_FAVORITES':\n      return { ...state, currentList: {...state.currentList, favorites: action.payload }}\n    case 'REMOVE_FROM_FAVORITES':\n      return { ...state, currentList: {...state.currentList, favorites: action.payload }}\n    default: return state\n  }\n}","const initialState = {\n  loading: false,\n  selectedQuote: null,\n  quoteOfDay: null,\n  allQuotes: [],\n}\n\nexport default function quoteReducer(state = initialState, action) {\n  switch(action.type) {\n    case 'FETCH_QUOTE_OF_THE_DAY':\n      return { ...state, loading: false, quoteOfDay: action.payload}\n    case 'LOADING_QUOTES':\n      return { ...state, loading: true }\n    case 'FETCH_QUOTES':\n      return { ...state, loading: false, allQuotes: action.payload }\n    case 'QUOTE_SELECTED':\n      return { ...state, loading: false, selectedQuote: action.payload }\n    default: return state\n  }\n}","import { combineReducers } from 'redux';\nimport listReducer from './listReducer'\nimport quoteReducer from './quoteReducer'\nimport { reducer as formReducer } from 'redux-form';\n\nconst rootReducer = combineReducers({\n\t// our app has a piece of state called list (or quotes, or form) where the value is \n\t// whatever gets returned from the reducer on the right of the colon (i.e., a list of quotes).\n  list: listReducer,\n  quotes: quoteReducer,\n  form: formReducer\n\n})\n\nexport default rootReducer","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { Provider } from 'react-redux'\n\nimport reduxThunk from 'redux-thunk';\nimport { createStore, applyMiddleware, compose } from 'redux';\nimport rootReducer from './reducers';\n\nconst composeEnhancer = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\nconst store = createStore(\n  rootReducer,\n  composeEnhancer(applyMiddleware(reduxThunk))\n);\n\n\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.querySelector('#root')\n)\n\nexport default store;\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}